syntax = "proto3";
package trader_credentials;
import "google/protobuf/empty.proto";


message RegisterTraderRequest{
    string ProcessId = 1;
    string Email = 2;
    string Password = 3;
}

enum ResponseStatus{
    Ok = 0;
    TraderExists = 1;
    InvalidUsernameOrPassword = 2;
    TraderNotFound = 3;
    PasswordIsWrong = 4;
}

message RegisterTraderResponse{
    trader_credentials.ResponseStatus Status = 1;
    optional string TraderId = 2;
}

message VerifyTraderPasswordRequest{
    string Email = 1;
    string Password = 2;
}

message VerifyTraderPasswordResponse{
    trader_credentials.ResponseStatus Status = 1;
    optional string TraderId = 2;
}

message ResolveEmailByIdRequest{
    string TraderId = 1;
}

message ResolveEmailByIdResponse{
    trader_credentials.ResponseStatus Status = 1;
    optional string Email = 2;
}

message ResolveIdByEmailRequest{
    string Email = 1;
}


message ResolveIdByEmailResponse{
    string Id = 1;
}


message ChangePasswordWithCurrentPasswordRequest{
    string TraderId = 1;
    string OldPassword = 2;
    string NewPassword = 3;
}

message ChangePasswordWithCurrentPasswordResponse{
    trader_credentials.ResponseStatus Status = 1;
}



message SearchEmailByIdModel{
    string TraderId = 1;
    uint64 RegistrationDate = 2;
}

message SearchByIdOrEmailResponse{
    repeated SearchEmailByIdModel Ids = 1;
}

message UpdatePasswordRequest{
    string TraderId = 1;
    string NewPassword = 2;
}

message GetTradersRequest{
    repeated string TraderIds = 1;
}

service TraderCredentialsGrpcService {
    rpc Register(trader_credentials.RegisterTraderRequest) returns (trader_credentials.RegisterTraderResponse);   
    rpc VerifyPassword(trader_credentials.VerifyTraderPasswordRequest) returns (trader_credentials.VerifyTraderPasswordResponse);
    rpc ResolveEmailById(trader_credentials.ResolveEmailByIdRequest) returns (trader_credentials.ResolveEmailByIdResponse);   
    rpc ResolveIdByEmail(ResolveIdByEmailRequest) returns (ResolveIdByEmailResponse);       
    rpc ChangePasswordWithCurrentPassword(trader_credentials.ChangePasswordWithCurrentPasswordRequest) returns (trader_credentials.ChangePasswordWithCurrentPasswordResponse); 
    rpc UpdatePassword(UpdatePasswordRequest) returns (google.protobuf.Empty); 
    rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);
}